<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>FunctionalSharp.PatternMatching.DiscriminatedUnions</PackageId>
    <PackageVersion>0.9.0</PackageVersion>
    <Title>FunctionalSharp PatternMatching Discriminated unions</Title>
    <Authors>Patrick van Lohuizen</Authors>
    <PackageLicenseUrl>https://github.com/Patrickkk/FunctionalSharp/blob/master/LICENSE</PackageLicenseUrl>
    <RepositoryUrl>https://github.com/Patrickkk/FunctionalSharp/</RepositoryUrl>
    <Description>Provides additional types and methods allowing patternamtching to return discriminatedunions. You can now return different types with patternamtching;and return a discriminated union of these types.    </Description>
    <PackageReleaseNotes>- converted to .netstndard 2.0</PackageReleaseNotes>
    <Copyright>Patrick van Lohuizen</Copyright>
    <PackageTags>pattern;patternmatch;match;functional</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Fody" Version="2.1.3" />
    <PackageReference Include="GitLink" Version="3.1.0" />
    <PackageReference Include="NullGuard.Fody" Version="1.6.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FunctionalSharp.DiscriminatedUnions\FunctionalSharp.DiscriminatedUnions.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="DiscriminatedPatternMatch.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DiscriminatedPatternMatch.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="DiscriminatedPatternMatch.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>DiscriminatedPatternMatch.tt</DependentUpon>
    </Compile>
  </ItemGroup>

</Project>
